# This file tells Logstash what workflow we would like to have with log messages on the network

# Input specifies that we are looking for syslog messages on port 1514
input {
  syslog {
	port => "1514"}
}

# The following filter is used to match IOSXR syslog coming into Logstash. Note this is the secret sauce in this file! These definitions tell logstash which messages to match
# as well as the way to categorise the message (what kind of date format, whether an IP address is a source or a destination)
# These categories will define what is searchable in Elasticsearch so it is important that they are correct
# There are some online resources to help you create this filter - google is your friend. 
# Note that this filter references some base definitions made in the grok file in the same folder. This is referred to by the patterns_dir line
filter {
  grok {
    match => { "message" => '\<%{INT:syslogSequence}\>\d+: %{REPORTER:node}:%{SYSLOGTIMESTAMP} : %{WORD:processName}\[%{INT:processID}]: \%%{WORD:syslogCategory}-%{WORD:syslogGroup}-%{INT:syslogSeverity}-%{WORD:syslogCode} : %{MESSAGE:syslogMessage}' }
    patterns_dir => ["/var/lib/logstash/etc/grok"] 
  }
}

# Defines the final stage of the logstash workflow where the message after being filtered is sent to Elasticsearch. 
output {
  elasticsearch {
     hosts => ["172.29.0.15"]
     }
  stdout {    
  }
}   



